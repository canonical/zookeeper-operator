# Copyright 2022 Canonical Ltd.
# See LICENSE file for licensing details.

[tox]
no_package = True
skip_missing_interpreters = True
env_list = lint, unit

[vars]
application = zookeeper
src_path = {tox_root}/src
tests_path = {tox_root}/tests
lib_path = {tox_root}/lib/charms/zookeeper
all_path = {[vars]src_path} {[vars]tests_path} 

[testenv]
allowlist_externals = /bin/bash
set_env =
    PYTHONPATH = {tox_root}/lib:{[vars]src_path}
    PYTHONBREAKPOINT=ipdb.set_trace
    PY_COLORS=1
pass_env =
    PYTHONPATH
    CHARM_BUILD_DIR
    MODEL_SETTINGS

[testenv:refresh]
description = Short refresh script for charm-dev
commands = 
    /bin/bash -ec "juju destroy-model zookeeper --force --destroy-storage --no-wait"
    /bin/bash -ec "juju add-model zookeeper"
    /bin/bash -ec "charmcraft pack"
    /bin/bash -ec "juju deploy ./*.charm -n 3"

[testenv:format]
description = Apply coding style standards to code
deps =
    black
    ruff==0.0.157
commands =
    ruff --fix {[vars]all_path}
    black {[vars]all_path}

[testenv:lint]
description = Check code against coding style standards
deps =
    black
    ruff==0.0.157
    codespell
commands =
    codespell {tox_root} \
        --skip {tox_root}/.git \
        --skip {tox_root}/.tox \
        --skip {tox_root}/build \
        --skip {tox_root}/lib \
        --skip {tox_root}/venv \
        --skip {tox_root}/.mypy_cache \
        --skip {tox_root}/icon.svg

    ruff {[vars]all_path}
    black --check --diff {[vars]all_path}

[testenv:unit]
description = Run unit tests
deps =
    pytest
    kazoo
    pure-sasl
    tenacity
    coverage[toml]
    cryptography
    jsonschema
    -r {tox_root}/requirements.txt
commands =
    coverage run --source={[vars]src_path} \
        -m pytest -vv --tb native -s {posargs} {[vars]tests_path}/unit
    coverage report

[testenv:integration]
description = Run integration tests
pass_env =
    {[testenv]pass_env}
    CI
    CI_PACKED_CHARMS
deps =
    pytest
    juju==2.9.11
    kazoo
    pure-sasl
    tenacity
    pytest-operator
    -r {tox_root}/requirements.txt
commands =
    pytest -vv --no-header --tb native --log-cli-level=INFO -s {posargs} {[vars]tests_path}/integration/

[testenv:integration-password-rotation]
description = Run integration tests for password-rotation
pass_env =
    {[testenv]pass_env}
    CI
    CI_PACKED_CHARMS
deps =
    pytest
    juju==2.9.11
    kazoo
    pure-sasl
    tenacity
    pytest-operator
    -r {tox_root}/requirements.txt
commands =
    pytest -vv --no-header --tb native --log-cli-level=INFO -s {posargs} {[vars]tests_path}/integration/test_password_rotation.py

[testenv:integration-provider]
description = Run integration tests for provider
pass_env =
    {[testenv]pass_env}
    CI
    CI_PACKED_CHARMS
deps =
    pytest
    juju==2.9.11
    kazoo
    pure-sasl
    tenacity
    pytest-operator
    -r {tox_root}/requirements.txt
commands =
    pytest -vv --no-header --tb native --log-cli-level=INFO -s {posargs} {[vars]tests_path}/integration/test_provider.py

[testenv:integration-scaling]
description = Run integration tests for scaling
pass_env =
    {[testenv]pass_env}
    CI
    CI_PACKED_CHARMS
deps =
    pytest
    juju==2.9.11
    kazoo
    pure-sasl
    tenacity
    pytest-operator
    -r {tox_root}/requirements.txt
commands =
    pytest -vv --no-header --tb native --log-cli-level=INFO -s {posargs} {[vars]tests_path}/integration/test_scaling.py

[testenv:integration-tls]
description = Run integration tests for tls
pass_env =
    {[testenv]pass_env}
    CI
    CI_PACKED_CHARMS
deps =
    pytest
    juju==2.9.11
    kazoo
    pure-sasl
    tenacity
    pytest-operator
    -r {tox_root}/requirements.txt
commands =
    pytest -vv --no-header --tb native --log-cli-level=INFO -s {posargs} {[vars]tests_path}/integration/test_tls.py
